{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"\" id=\"3ENQz]-})5oMOSY|EH;x\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">Time_left</variable></variables><block type=\"exp_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"170\" y=\"70\"><next><block type=\"exp_variables_set_variable\" id=\"t8tE?@QVeqe6mCP^blbi\"><field name=\"VARIABLE\" id=\"3ENQz]-})5oMOSY|EH;x\" variabletype=\"\">Time_left</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"]9SlLo.)xhLoIjQEHp;q\"><field name=\"NUM\">30</field></shadow></value><next><block type=\"exp_control_while\" id=\"|[i4~*.A(Y-zXVKX^[ip\"><value name=\"CONDITION\"><block type=\"exp_operator_not\" id=\"Z.QF.46FU)1={ra%9fkf\"><value name=\"OPERAND\"><block type=\"exp_operator_equal_to\" id=\"|Ft1~Rs|j!rbn1hdVh^?\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"9T6zN~H.SI/w+ZsbL6$)\"><field name=\"NUM\"></field></shadow><block type=\"exp_variables_variable\" id=\"]Lrq#5QDYXQ~%l?~g]of\"><field name=\"VARIABLE\" id=\"3ENQz]-})5oMOSY|EH;x\" variabletype=\"\">Time_left</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"wIH?i15v/4wF[mrW_2Rv\"><field name=\"NUM\">0</field></shadow></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"exp_looks_clear_all_rows\" id=\"{!;~d*xPc6c-TQvli,*K\"><field name=\"TARGET\">Brain</field><next><block type=\"exp_looks_print\" id=\"5LZ?@GxPpu_o-Idya9e+\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\";#I88F(FV:$Ol2XpNV=i\"><field name=\"TEXT\"></field></shadow><block type=\"exp_variables_variable\" id=\"h0Om98E]QoL}A|IG+prb\"><field name=\"VARIABLE\" id=\"3ENQz]-})5oMOSY|EH;x\" variabletype=\"\">Time_left</field></block></value><next><block type=\"exp_other_comment\" id=\";)~Boi?#l6O#~dYwX.{o\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"goVd#dzF_[+*R#MHo#x,\"><field name=\"comment\">Make it wait one second</field></shadow></value><next><block type=\"exp_variables_set_variable\" id=\"#{JG9C]JR(.^N;zxF6e7\"><field name=\"VARIABLE\" id=\"3ENQz]-})5oMOSY|EH;x\" variabletype=\"\">Time_left</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"(:cP$}.|kL5Imn46]2Yc\"><field name=\"NUM\">0</field></shadow><block type=\"exp_operator_subtract\" id=\"U,(9N*6d0y+G0HA7t*Uk\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"M-PeJGHb~/`3(c]/X[l_\"><field name=\"NUM\"></field></shadow><block type=\"exp_variables_variable\" id=\"+NM~Rcu7s6v/lLk7bU:`\"><field name=\"VARIABLE\" id=\"3ENQz]-})5oMOSY|EH;x\" variabletype=\"\">Time_left</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"(n3I^+dsMV^a)}UB1y_m\"><field name=\"NUM\">1</field></shadow></value></block></value></block></next></block></next></block></next></block></statement></block></next></block></next></block><block type=\"exp_events_when_limit\" id=\"@s8Equ9N0RDo};iJ!^?l\" x=\"1090\" y=\"110\"><field name=\"LIMIT\">Forwards</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"exp_motion_spin\" id=\"C8FevnAOMXh|)rpKBR)Q\"><field name=\"MOTOR\">MotorGroup1</field><field name=\"DIRECTION\">fwd</field><next><block type=\"exp_motion_spin\" id=\"oA`1#p({Sc|vEfQswI*)\"><field name=\"MOTOR\">MotorGroup6</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block><block type=\"exp_events_when_limit\" id=\"q0V#Ejx/pBw8pB2e!{xR\" x=\"690\" y=\"210\"><field name=\"LIMIT\">Forwards</field><field name=\"EVENTTYPE\">released</field><next><block type=\"exp_motion_stop_motor\" id=\"#jhtWd7~tKs1k|.KY{W+\"><field name=\"MOTOR\">MotorGroup1</field><next><block type=\"exp_motion_stop_motor\" id=\"]TwoUZ(,AfTlu#lmXE`-\"><field name=\"MOTOR\">MotorGroup6</field></block></next></block></next></block><block type=\"exp_events_when_limit\" id=\"U.hcb2FNr7(L+MBu61}p\" x=\"750\" y=\"470\"><field name=\"LIMIT\">Backwards</field><field name=\"EVENTTYPE\">released</field><next><block type=\"exp_motion_stop_motor\" id=\"k!|0v77U^!V(FTU|Uro}\"><field name=\"MOTOR\">MotorGroup1</field><next><block type=\"exp_motion_stop_motor\" id=\"C$-[=k:JwdGc;fJO##@m\"><field name=\"MOTOR\">MotorGroup6</field></block></next></block></next></block><block type=\"exp_events_when_limit\" id=\"-Xj6XW@esdRAJK$RC|^@\" x=\"1210\" y=\"450\"><field name=\"LIMIT\">Backwards</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"exp_motion_spin\" id=\"DkP/a!.MF*Xqz04k$.j+\"><field name=\"MOTOR\">MotorGroup1</field><field name=\"DIRECTION\">rev</field><next><block type=\"exp_motion_spin\" id=\".zoDnIt6n^Zk{=Hs9hN)\"><field name=\"MOTOR\">MotorGroup6</field><field name=\"DIRECTION\">rev</field></block></next></block></next></block><block type=\"exp_control_if_then\" id=\"Sr}fJIHkT38Z/8kN6D::\" x=\"290\" y=\"670\"><value name=\"CONDITION\"><block type=\"exp_operator_not\" id=\"-Dq-ZSgW6P){DmC]JO;i\"><value name=\"OPERAND\"><block type=\"exp_operator_equal_to\" id=\"QhsT[M5@D=n{@]XTzAsy\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"D|L#oH1^9teiwS$wKMwU\"><field name=\"NUM\"></field></shadow><block type=\"exp_variables_variable\" id=\"O3O,4I6d-I;fG-hAOY@[\"><field name=\"VARIABLE\" id=\"3ENQz]-})5oMOSY|EH;x\" variabletype=\"\">Time_left</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"^QsyTzUO-_1t$H)Fp_2M\"><field name=\"NUM\">0</field></shadow></value></block></value></block></value></block><block type=\"exp_control_if_then\" id=\"`.Eyqwgz#;WWaN!WnIlS\" x=\"950\" y=\"690\"><value name=\"CONDITION\"><block type=\"exp_operator_not\" id=\"c~^D|;PttH`?J/78alQ6\"><value name=\"OPERAND\"><block type=\"exp_operator_equal_to\" id=\"*hu4oq9*kZ[@)mWu9@:z\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"SxMflY6dNK!+_B6[zO;W\"><field name=\"NUM\"></field></shadow><block type=\"exp_variables_variable\" id=\"o;a|Y3JiB7iL`=BV3F#K\"><field name=\"VARIABLE\" id=\"3ENQz]-})5oMOSY|EH;x\" variabletype=\"\">Time_left</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"=jd;{TwBe4U)?[X#rP~d\"><field name=\"NUM\">0</field></shadow></value></block></value></block></value></block></xml>","rconfig":[{"port":[1,5],"name":"MotorGroup1","customName":false,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"false","motor_b_reversed":"true"}},{"port":[6,10],"name":"MotorGroup6","customName":false,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"false","motor_b_reversed":"true"}},{"port":[5],"name":"Forwards","customName":true,"deviceType":"LimitSwitch","deviceClass":"limit","setting":{},"triportSourcePort":22},{"port":[6],"name":"Backwards","customName":true,"deviceType":"LimitSwitch","deviceClass":"limit","setting":{},"triportSourcePort":22}],"slot":0,"platform":"EXP","sdkVersion":"20220112.18.00.00","appVersion":"2.3.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START EXP MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END EXP MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor MotorGroup1MotorA = motor(PORT1, false);\nmotor MotorGroup1MotorB = motor(PORT5, true);\nmotor_group MotorGroup1 = motor_group(MotorGroup1MotorA, MotorGroup1MotorB);\n\nmotor MotorGroup6MotorA = motor(PORT6, false);\nmotor MotorGroup6MotorB = motor(PORT10, true);\nmotor_group MotorGroup6 = motor_group(MotorGroup6MotorA, MotorGroup6MotorB);\n\nlimit Forwards = limit(Brain.ThreeWirePort.E);\nlimit Backwards = limit(Brain.ThreeWirePort.F);\n\n\n\n// Generated code.\n\n// Include the EXP Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable, Time_left;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Time_left = 30.0;\n  while ((!(Time_left == 0.0))) {\n    Brain.Screen.clearScreen();\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Time_left));\n    // Make it wait one second\n    Time_left = Time_left - 1.0;\n  wait(5, msec);\n  }\n  return 0;\n}\n\n// \"when Forwards pressed\" hat block\nvoid onevent_Forwards_pressed_0() {\n  MotorGroup1.spin(forward);\n  MotorGroup6.spin(forward);\n}\n\n// \"when Forwards released\" hat block\nvoid onevent_Forwards_released_0() {\n  MotorGroup1.stop();\n  MotorGroup6.stop();\n}\n\n// \"when Backwards released\" hat block\nvoid onevent_Backwards_released_0() {\n  MotorGroup1.stop();\n  MotorGroup6.stop();\n}\n\n// \"when Backwards pressed\" hat block\nvoid onevent_Backwards_pressed_0() {\n  MotorGroup1.spin(reverse);\n  MotorGroup6.spin(reverse);\n}\n\n\nint main() {\n  // register event handlers\n  Forwards.pressed(onevent_Forwards_pressed_0);\n  Forwards.released(onevent_Forwards_released_0);\n  Backwards.released(onevent_Backwards_released_0);\n  Backwards.pressed(onevent_Backwards_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n\n  whenStarted1();\n}","target":"Physical"}